{
  "_args": [
    [
      {
        "raw": "react-native-expanding-circle-transition",
        "scope": null,
        "escapedName": "react-native-expanding-circle-transition",
        "name": "react-native-expanding-circle-transition",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/nardos/Documents/DataBankApp"
    ]
  ],
  "_from": "react-native-expanding-circle-transition@latest",
  "_id": "react-native-expanding-circle-transition@1.2.3",
  "_inCache": true,
  "_location": "/react-native-expanding-circle-transition",
  "_nodeVersion": "7.2.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/react-native-expanding-circle-transition-1.2.3.tgz_1487760070855_0.2541760513558984"
  },
  "_npmUser": {
    "name": "alexbrillant",
    "email": "abrillant23@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-expanding-circle-transition",
    "scope": null,
    "escapedName": "react-native-expanding-circle-transition",
    "name": "react-native-expanding-circle-transition",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-expanding-circle-transition/-/react-native-expanding-circle-transition-1.2.3.tgz",
  "_shasum": "60ccc8df058b68ae9ed44b45e5ae3001f3286cc4",
  "_shrinkwrap": null,
  "_spec": "react-native-expanding-circle-transition",
  "_where": "/Users/nardos/Documents/DataBankApp",
  "author": {
    "name": "Alexandre Brillant",
    "email": "abrillant23@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/alexbrillant/react-native-expanding-circle-transition/issues"
  },
  "config": {
    "ghooks": {
      "pre-commit": "if [ -d 'ignite-base' ]; then cd ignite-base; fi; npm run lint"
    }
  },
  "dependencies": {
    "react-mixin": "^2.0.2"
  },
  "description": "Expanding circle transition using react-native Modal and Animated API",
  "devDependencies": {
    "babel-eslint": "^7.1.1",
    "babel-jest": "18.0.0",
    "babel-preset-react-native": "1.9.1",
    "jest": "18.1.0",
    "jest-cli": "^18.1.0",
    "react": "15.4.2",
    "react-native": "0.41.2",
    "react-test-renderer": "15.4.2"
  },
  "directories": {},
  "dist": {
    "shasum": "60ccc8df058b68ae9ed44b45e5ae3001f3286cc4",
    "tarball": "https://registry.npmjs.org/react-native-expanding-circle-transition/-/react-native-expanding-circle-transition-1.2.3.tgz"
  },
  "gitHead": "a1a64224c6c46d9fedbc4b9a7e3b0cdee0572dfc",
  "homepage": "https://github.com/alexbrillant/react-native-expanding-circle-transition",
  "jest": {
    "preset": "react-native"
  },
  "keywords": [
    "react-native",
    "react-component",
    "react-native-component",
    "react",
    "mobile",
    "ios",
    "ui",
    "animation",
    "transition",
    "circle",
    "expanding circle"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "alexbrillant",
      "email": "abrillant23@gmail.com"
    }
  ],
  "name": "react-native-expanding-circle-transition",
  "optionalDependencies": {},
  "private": false,
  "readme": "# react-native-expanding-circle-transition\n[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/dwyl/esta/issues)\n[![Standard - JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n[![npm version](https://badge.fury.io/js/react-native-expanding-circle-transition.svg)](https://badge.fury.io/js/react-native-expanding-circle-transition)\n[![npm](https://img.shields.io/badge/downloads-627%2Fmonth-green.svg)](https://www.npmjs.com/package/react-native-expanding-circle-transition)\n\n## Preview\n\n![App preview](/animation.gif)\n\n## Installation\n\n  `npm install react-native-expanding-circle-transition --save`\n\n## Props\n\n| Props    | type   | description                                                                                             | required or default                          |\n|----------|--------|---------------------------------------------------------------------------------------------------------|----------------------------------|\n| color    | string | Color of the circle view                                                                                | 'orange'                         |\n| size     | number | Size of the circle view. Important: It has to fit in the window | Math.min(width, height) - 1  |\n| scaleShrink | number | Scale factor to shrink the circle | 0 |\n| scaleExpand | number | Scale factor to expand the circle | 4 |\n| transitionBuffer | number | Buffer between the transition and the animation. The transition must happen before the circle is hidden | 5 |\n| duration | number | Animation duration                                                                              | 800                              |\n| expand   | bool   | Expand the circle if true, reduce the circle if false                                                                            | true                             |\n| position | enum   | Circle position :  ['topLeft', 'topRight', 'bottomLeft', 'bottomRight', 'center', 'left', 'right', 'top', 'bottom', 'custom']  | 'topLeft'                        |\n| customLeftMargin | number   |  Custom position's left margin from the center of the circle positioned at topLeft |  0                       |\n| customTopMargin | number   |  Custom position's top margin from the center of the circle positioned at topLeft |  0                       |\n| easing | func   | React Native Animation Easing  |      Easing.linear                   |\n\n## How to use\n\nTo trigger the animation, you need to use a ref to call the start function of this component. \nTo change the scene before the circle is hidden, pass a callback(check out usage exemple handlePress function). \n\n## Usage exemples\n```javascript\nimport React, {\n  Component\n} from 'react'\n\nimport {\n  Easing,\n  StyleSheet,\n  Text,\n  View,\n  TouchableWithoutFeedback\n} from 'react-native'\n\nimport CircleTransition from 'react-native-expanding-circle-transition'\nconst ANIMATION_DURATION = 1200\nconst INITIAL_VIEW_BACKGROUND_COLOR = '#E3E4E5'\nconst CIRCLE_COLOR1 = '#29C5DB'\nconst CIRCLE_COLOR2 = '#4EB8AE'\nconst CIRCLE_COLOR3 = '#81C781'\nconst CIRCLE_COLOR4 = '#B0D882'\nconst TRANSITION_BUFFER = 10\nconst POSITON = 'custom'\n\nconst reactMixin = require('react-mixin')\nimport TimerMixin from 'react-timer-mixin'\n\nclass Exemples extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      viewBackgroundColor: INITIAL_VIEW_BACKGROUND_COLOR,\n      circleColor: CIRCLE_COLOR1,\n      customLeftMargin: 0,\n      customTopMargin: 0,\n      counter: 0\n    }\n    this.handlePress = this.handlePress.bind(this)\n    this.changeColor = this.changeColor.bind(this)\n  }\n\n  handlePress (event) {\n    let pressLocationX = event.nativeEvent.locationX\n    let pressLocationY = event.nativeEvent.locationY\n    this.setState({\n      customLeftMargin: pressLocationX,\n      customTopMargin: pressLocationY\n    }, this.circleTransition.start(this.changeColor))\n  }\n\n  changeColor () {\n    const { circleColor, counter } = this.state\n    let newCounter = counter < 3 ? counter + 1 : 0\n    let newCircleColor = this.getColor(newCounter)\n    this.setState({\n      viewBackgroundColor: circleColor,\n      counter: newCounter\n    })\n    this.changeCircleColor(newCircleColor)\n  }\n\n  changeCircleColor (newCircleColor) {\n    this.setTimeout(() => {\n      this.setState({\n        circleColor: newCircleColor\n      })\n    }, TRANSITION_BUFFER + 5)\n  }\n\n  getColor (counter) {\n    switch (counter) {\n      case 0:\n        return CIRCLE_COLOR1\n      case 1:\n        return CIRCLE_COLOR2\n      case 2:\n        return CIRCLE_COLOR3\n      case 3:\n        return CIRCLE_COLOR4\n      default:\n        return CIRCLE_COLOR4\n    }\n  }\n\n  render () {\n    let {\n      circleColor,\n      viewBackgroundColor,\n      customTopMargin,\n      customLeftMargin\n    } = this.state\n    return (\n      <View style={[\n        styles.container,\n        {\n          backgroundColor: viewBackgroundColor\n        }]}>\n        <TouchableWithoutFeedback\n          style={styles.touchable}\n          onPress={this.handlePress}>\n          <View style={styles.touchableView}>\n            <Text style={styles.text}>{viewBackgroundColor.toString()}</Text>\n          </View>\n        </TouchableWithoutFeedback>\n        <CircleTransition\n          ref={(circle) => { this.circleTransition = circle }}\n          color={circleColor}\n          expand\n          customTopMargin={customTopMargin}\n          customLeftMargin={customLeftMargin}\n          transitionBuffer={TRANSITION_BUFFER}\n          duration={ANIMATION_DURATION}\n          easing={Easing.linear}\n          position={POSITON}\n        />\n      </View>\n    )\n  }\n}\n\nreactMixin(Exemples.prototype, TimerMixin)\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch'\n  },\n  touchableView: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    fontSize: 45,\n    fontWeight: '400',\n    color: '#253039'\n  },\n  touchable: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n\nexport default Exemples\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/alexbrillant/react-native-expanding-circle-transition.git"
  },
  "scripts": {
    "fixcode": "standard --fix",
    "lint": "standard --verbose | snazzy",
    "lintdiff": "git diff --name-only --cached --relative | grep '\\.js$' | xargs standard | snazzy",
    "test": "jest --coverage"
  },
  "version": "1.2.3"
}
